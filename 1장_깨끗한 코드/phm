1장 깨끗한 코드=====================

르블랑의 법칙(Leblanc’s Law)
---------------------------------
<img src="https://oopy.lazyrockets.com/api/v2/notion/image?src=https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F9d6ee16c-740c-4742-89b9-6a3f00cdd018%2FUntitled.png&blockId=669fa533-9c6c-4b6a-bd3c-0cd43f8267ee"></img>
>나중은 절대 돌아오지 않는다. 나쁜 코드를 구현하면 나중은 오지 않는다.

깨끗한 코드란
-----------------------------
* c++ 창시자 비야네 스트롭스트룹
>“깨끗한 코드는 한 가지를 제대로 한다.”

* UML개발자 그래디 부치
>“깨끗한 코드는 명쾌한 추상화와 단순한 제어문을 사용한다.”

* 애자일 선언문 창시자 데이브 토마스
>“깨끗한 코드는 작성자가 이미 모든 사항을 고려하여 주의 깊게 짠 코드로 손 댈 곳이 없다.”

* 애자일 선언문 창시자 론 제프리스
>“간단한 코드는 모든 테스트를 통과하고, 중복이 없으며, 클래스, 메서드, 함수 등을 최대한 줄여야 한다.”

* 위키 창시자 워드 커닝햄
>“코드를 읽으면서 짐작했던 기능을 각 루틴 그대로 수행한다면 깨끗한 코드이다.” 
